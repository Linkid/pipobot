#!/usr/bin/env python -W ignore::DeprecationWarning

import re
import sys
from twisted.internet import stdio, reactor, protocol
from twisted.protocols import basic


class DataForwardingProtocol(protocol.Protocol):
    def __init__(self):
        self.output = None

    def dataReceived(self, data):
        if self.output:
            self.output.write(data)

    def connectionLost(self, reason):
        print (reason.getErrorMessage())


class StdioProxyProtocol(DataForwardingProtocol):
    def connectionMade(self):
        inputForwarder = DataForwardingProtocol()
        inputForwarder.output = self.transport
        stdioWrapper = stdio.StandardIO(inputForwarder)
        self.output = stdioWrapper
        self.transport.write("%s;%s;%s" % (self.username, self.jid, self.role))

        print "Connected to server"


class StdioProxyFactory(protocol.ClientFactory):
    protocol = StdioProxyProtocol

    def __init__(self, username, jid=None, role="participant"):
        self.protocol.username = username
        self.protocol.jid = jid or "%s@domain.tld" % username
        self.protocol.role = role


def main(username):
    reactor.connectTCP("localhost", 8123, StdioProxyFactory(username))
    reactor.run()


if __name__ == '__main__':
    import sys
    if len(sys.argv) < 2:
        print "Usage: pipobot-twisted [username]"
        sys.exit(1)
    username = sys.argv[1]
    main(username)
